
# -*- coding: utf-8 -*-
"""Arrays and Strings.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10YQGnLtF7IVJuVxOTupbEhQFklYm6rxm



# sorted and index
**Set and Enumerate Usage**
"""

list_samp=["a","b","c","a","b","c"]
x=set(list_samp)
print("First Output: set looks like " +str(x))
print("Second Output: Enumerate Function")
for i,num in enumerate(list_samp):
  print(i,num)

"""**Concatenation of Array to itself**"""

#Concatenation of Array to itself
ans=[0,1]*2
print(ans)

# creating an array of len n and has all zeroes
n=10
ans=[0]*n
ans

"""**Inbuilt Functions**"""

#Max
print(max(1,2,3))

print(max(["a","b","c","a","b","c"]))

# concatenation
[1,2]+[3,4]

### Use double equals in if/else conditions:     
            if i=="--X" or i=="X--":
                X=X-1
            elif i=="++X" or i=="X++":
                X=X+1
            else:
                X=X

"""**Usage of .split**"""

# Get the maximum words in the largest sentence present in the array of sentences
def mostWordsFound(sentences):
        max_words = 0
        for sentence in sentences:
            words = sentence.split(" ")
            word_count = len(words)
            if word_count > max_words:
                max_words = word_count
        return max_words
            
sentences = ["alice and bob love leetcode", "i think so too", "this is great thanks very much"]
mostWordsFound(sentences)

"""**some Examples**"""

candies=[10,20,30]
extraCandies=5
n=max(candies)
after=[x+extraCandies for x in candies]
print(after)

#checking after adding extra candies will it be more than previous max candies number
arraytruth = [True if x>=n else False for x in after]
arraytruth

#Given the array nums consisting of 2n elements in the form [x1,x2,...,xn,y1,y2,...,yn].
# return the array in the form [x1,y1,x2,y2,...,xn,yn].
        ans=[]
    
        for i in range(n):
            ans.append(nums[i])
            ans.append(nums[i+n])
        return ans
